version: '3.8'

services:
  # Backend API (Development)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: builder  # Stop at builder stage for development
    container_name: rentredi-backend
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=8080
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - OPENWEATHER_API_BASE_URL=${OPENWEATHER_API_BASE_URL:-https://api.openweathermap.org/data/2.5}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-rentredi-assessment-dev}
      - FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL:-http://firebase-emulator:9000?ns=rentredi-assessment-dev}
      - FIREBASE_EMULATOR_HOST=firebase-emulator
      - FIREBASE_EMULATOR_PORT=9000
      - FIREBASE_RTDB_NAMESPACE=${FIREBASE_PROJECT_ID:-rentredi-assessment-dev}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL:-http://localhost:5173}
    volumes:
      - ./server:/app:delegated
      - /app/node_modules  # Anonymous volume for node_modules
    command: npm run dev
    depends_on:
      firebase-emulator:
        condition: service_started
    networks:
      - rentredi-network
    restart: unless-stopped

  # Frontend React App (Development)
  frontend:
    image: node:20-alpine
    container_name: rentredi-frontend
    working_dir: /app
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8080/api}
    volumes:
      - ./client:/app:delegated
      - /app/node_modules  # Anonymous volume for node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    depends_on:
      - backend
    networks:
      - rentredi-network
    restart: unless-stopped

  # Firebase Emulator
  firebase-emulator:
    image: node:20-slim
    container_name: rentredi-firebase-emulator
    ports:
      - "9000:9000"
      - "4000:4000"
      - "4400:4400"
    environment:
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-rentredi-assessment-dev}
    volumes:
      - ./firebase.json:/app/firebase.json:ro
      - firebase-data:/app/data
    working_dir: /app
    command: >
      sh -c "apt-get update && 
             apt-get install -y default-jre-headless &&
             npm install -g firebase-tools@latest &&
             firebase emulators:start --project ${FIREBASE_PROJECT_ID:-rentredi-assessment-dev} --only database,ui"
    networks:
      - rentredi-network
    restart: unless-stopped

networks:
  rentredi-network:
    driver: bridge

volumes:
  firebase-data: 